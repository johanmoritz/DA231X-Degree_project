@article{daniel_ipfs_2022,
  title     = {Ipfs and friends: A qualitative comparison of next generation peer-to-peer data networks},
  author    = {Daniel, Erik and Tschorsch, Florian},
  journal   = {IEEE Communications Surveys \& Tutorials},
  year      = {2022},
  publisher = {IEEE}
}

@inproceedings{blahser_thine_2021,
  title      = {Thine — Approach for a fault tolerant distributed packet manager based on hypercore protocol},
  doi        = {10.1109/COMPSAC51774.2021.00266},
  abstract   = {There are a range of package managers out there which are used in almost every software development project to integrate third party packages to a project. These packages are usually stored in central repositories in the cloud. This central cloud approach brings some downsides especially with regard to fault tolerance which we want to tackle with our approach inspired by thoughts of dew computing. In this paper we present a fully distributed package manager which can be used on cloud as well as on the edge or in a hybrid environment. The approach is based on a peer-to-peer network, implemented with hypercore protocol.},
  eventtitle = {2021 {IEEE} 45th Annual Computers, Software, and Applications Conference ({COMPSAC})},
  pages      = {1778--1782},
  booktitle  = {2021 {IEEE} 45th Annual Computers, Software, and Applications Conference ({COMPSAC})},
  author     = {Blähser, Jannik and Göller, Tim and Böhmer, Matthias},
  date       = {2021-07},
  note       = {{ISSN}: 0730-3157},
  keywords   = {Conferences, Fault tolerance, Fault tolerant systems, Java, Protocols, Prototypes, Software},
  file       = {IEEE Xplore Full Text PDF:C\:\\Users\\johan.moritz\\Zotero\\storage\\NBNIEPJP\\Blähser et al. - 2021 - Thine — Approach for a fault tolerant distributed .pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\johan.moritz\\Zotero\\storage\\ZMDEDTY5\\9529611.html:text/html}
}

@inproceedings{ince_blockchain_2020,
  title      = {Blockchain Based Distributed Package Management Architecture},
  doi        = {10.1109/UBMK50275.2020.9219374},
  abstract   = {Application management in Linux based operating systems is managed by package managers. The package repositories of most Linux distributions provide software through central servers. While having a central server provides a unique verified and maintained version, servers often separate official and community packages, and users frequently use community packages. However, some highly demanded community packages may not be stored in official repositories. While central servers are open to a single point of failure, using community packages without any security check may be insecure. In this paper, we introduce the idea of a distributed package management architecture for Linux systems based on blockchain technology. In the proposed system, package providers are considered as miners, building a package is mining, and proof-of-work is reproducible packaging by the miners. The blockchain keeps the hash of the package contents. Creating and testing a package will return to the packager as reliability scores. This system will have the following advantages. Packages will be verified through consensus, single points of failure will be eliminated ensuring availability, packages are stored in a distributed network. The goal is to keep the operating system alive with a decentralized, reliable, and transparent blockchain-based package management system.},
  eventtitle = {2020 5th International Conference on Computer Science and Engineering ({UBMK})},
  pages      = {238--242},
  booktitle  = {2020 5th International Conference on Computer Science and Engineering ({UBMK})},
  author     = {Ince, M. Numan and Ak, Murat and Gunay, Melih},
  date       = {2020-09},
  keywords   = {Blockchain, Global Positioning System, Hafnium compounds, Linux, {MILIS} Linux, Operating systems, Optical fibers, P2P Network, Package Management, Servers},
  file       = {IEEE Xplore Full Text PDF:C\:\\Users\\johan.moritz\\Zotero\\storage\\WFIK4AA8\\Ince et al. - 2020 - Blockchain Based Distributed Package Management Ar.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\johan.moritz\\Zotero\\storage\\XFEJMB64\\9219374.html:text/html}
}

@article{dagnat_toward_2011,
  title  = {Toward Decentralized Package Management},
  pages  = {7},
  author = {Dagnat, Fabien and Simon, Gwendal and Zhang, Xu},
  date   = {2011},
  langid = {english},
  file   = {Dagnat et al. - 2011 - Toward Decentralized Package Management.pdf:C\:\\Users\\johan.moritz\\Zotero\\storage\\JPDN7Z4I\\Dagnat et al. - 2011 - Toward Decentralized Package Management.pdf:application/pdf}
}

@article{cappos_package_nodate,
  title    = {Package Management Security},
  abstract = {Package management is the task of determining which packages should be installed on a host and then downloading and installing those packages. This paper examines the popular package managers {APT} and {YUM} and presents nine feasible attacks on them. There are attacks that install malicious packages, deny users package updates, or cause the host to crash. This work identiﬁes three rules of package management security: don’t trust the repository, the trusted entity with the most information should be the one who signs, and don’t install untrusted packages. The violation of these rules leads to the described vulnerabilities. Unfortunately, many of the ﬂaws are architectural in nature, so repair requires more than patches to {APT} and {YUM}.},
  pages    = {20},
  author   = {Cappos, Justin and Samuel, Justin and Baker, Scott and Hartman, John H},
  langid   = {english},
  file     = {Cappos et al. - Package Management Security.pdf:C\:\\Users\\johan.moritz\\Zotero\\storage\\PW6AL8N5\\Cappos et al. - Package Management Security.pdf:application/pdf}
}

@inproceedings{liu_data_2018,
  title      = {A Data Storage Method Based on Blockchain for Decentralization {DNS}},
  doi        = {10.1109/DSC.2018.00035},
  abstract   = {As a distributed database mapping the domain name and {IP} address, {DNS} makes it easier to access the Internet However, {DNS} relies on the resolution of the root server, which is a hierarchical network topology centered on the root. It is vulnerable to single points of failure and domain name resolution data tampered, affects the normal service of Internet domain name resolution seriously. To solve this problem, we proposed a new blockchain-based decentralization {DNS} data storage method by studying the principle and characteristics of blockchain. And implement a decentralization system {DecDNS} to establish multiple parallel {DNS} nodes, store the key information of the zone file resolution data. In the experiment, we proactively invalidated multiple nodes in the parallel resolution node and tampered the domain name resolution data. The experimental results show that, the {DecDNS} can provide normal resolution services, solve the problem of single point failure and the falsification of domain name resolution data. While compatible with the original domain name system, it is also enhances the stability and security of {DNS} framework, so it is an effective and feasible solution.},
  eventtitle = {2018 {IEEE} Third International Conference on Data Science in Cyberspace ({DSC})},
  pages      = {189--196},
  booktitle  = {2018 {IEEE} Third International Conference on Data Science in Cyberspace ({DSC})},
  author     = {Liu, Jingqiang and Li, Bin and Chen, Lizhang and Hou, Meng and Xiang, Feiran and Wang, Peijun},
  date       = {2018-06},
  keywords   = {blockchain, Cloud computing, Contracts, data storage, decentralization, {DNS}, Memory, Servers, single point failure},
  file       = {IEEE Xplore Full Text PDF:C\:\\Users\\johan.moritz\\Zotero\\storage\\C4R5KMWR\\Liu et al. - 2018 - A Data Storage Method Based on Blockchain for Dece.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\johan.moritz\\Zotero\\storage\\MFFE37I8\\8411856.html:text/html}
}

@article{zahed_benisi_blockchain-based_2020,
  title        = {Blockchain-based decentralized storage networks: A survey},
  volume       = {162},
  issn         = {10848045},
  url          = {https://linkinghub.elsevier.com/retrieve/pii/S1084804520301302},
  doi          = {10.1016/j.jnca.2020.102656},
  shorttitle   = {Blockchain-based decentralized storage networks},
  abstract     = {Blockchain is a new approach to create a distributed network which was ﬁrst introduced in 2008. By the help of this disruptive technology a peer-to-peer network can be formed where nodes have to reach a consensus and form a chain from accepted blocks, while no central party or trusted controller is required. Among all the existing uses of this technology, decentralized storage systems are one of its prominent applications. Decentralized storage networks, are consisted of a group of people willing to rent out their unused hardware storage space. By implementing end-to-end encryption clients can securely transmit their ﬁles through a fully decentralized network and eliminate the risk of data failures that arise from centralized controls. In this network, storage providers are required to prove that they store unaltered ﬁles during the time. Also a smart contract between two parties is set out in which rental duration and cost that the customer needs to pay for using that storage space is clariﬁed. This paper presents a comprehensive survey on the blockchain-based storage systems and how they work and then compares them with cloud-based storage networks. Also different techniques of consensus protocols in each group are explored. Next, we have an overview on the advantages and also weak points of blockchain-based storage systems. Finally, we discuss about future research directions.},
  pages        = {102656},
  journaltitle = {Journal of Network and Computer Applications},
  shortjournal = {Journal of Network and Computer Applications},
  author       = {Zahed Benisi, Nazanin and Aminian, Mehdi and Javadi, Bahman},
  urldate      = {2022-02-02},
  date         = {2020-07},
  langid       = {english},
  file         = {Zahed Benisi et al. - 2020 - Blockchain-based decentralized storage networks A.pdf:C\:\\Users\\johan.moritz\\Zotero\\storage\\79TG8FTV\\Zahed Benisi et al. - 2020 - Blockchain-based decentralized storage networks A.pdf:application/pdf}
}

@inproceedings{zichichi_efficiency_2020,
  title      = {On the Efficiency of Decentralized File Storage for Personal Information Management Systems},
  doi        = {10.1109/ISCC50000.2020.9219623},
  abstract   = {This paper presents an architecture, based on Distributed Ledger Technologies ({DLTs}) and Decentralized File Storage ({DFS}) systems, to support the use of Personal Information Management Systems ({PIMS}). {DLT} and {DFS} are used to manage data sensed by mobile users equipped with devices with sensing capability. {DLTs} guarantee the immutability, traceability and verifiability of references to personal data, that are stored in {DFS}. In fact, the inclusion of data digests in the {DLT} makes it possible to obtain an unalterable reference and a tamper-proof log, while remaining compliant with the regulations on personal data, i.e. {GDPR}. We provide an experimental evaluation on the feasibility of the use of {DFS}. Three different scenarios have been studied: i) a proprietary {IPFS} approach with a dedicated node interfacing with the data producers, ii) a public {IPFS} service and iii) Sia Skynet. Results show that through proper configuration of the system infrastructure, it is viable to build a decentralized Personal Data Storage ({PDS}).},
  eventtitle = {2020 {IEEE} Symposium on Computers and Communications ({ISCC})},
  pages      = {1--6},
  booktitle  = {2020 {IEEE} Symposium on Computers and Communications ({ISCC})},
  author     = {Zichichi, Mirko and Ferretti, Stefano and D’Angelo, Gabriele},
  date       = {2020-07},
  note       = {{ISSN}: 2642-7389},
  keywords   = {Computers, Decentralized File Storage, Distributed ledger, Distributed Ledger Technologies, Information management, Memory, Performance evaluation, Personal Information Management System, Regulation, Reliability engineering, Sensing as a Service},
  file       = {IEEE Xplore Full Text PDF:C\:\\Users\\johan.moritz\\Zotero\\storage\\B88J2R29\\Zichichi et al. - 2020 - On the Efficiency of Decentralized File Storage fo.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\johan.moritz\\Zotero\\storage\\C3PQ3VXX\\9219623.html:text/html}
}

@article{wilcox_verdi_nodate,
  title    = {Verdi: A Framework for Implementing and Formally Verifying Distributed Systems},
  abstract = {Distributed systems are difﬁcult to implement correctly because they must handle both concurrency and failures: machines may crash at arbitrary points and networks may reorder, drop, or duplicate packets. Further, their behavior is often too complex to permit exhaustive testing. Bugs in these systems have led to the loss of critical data and unacceptable service outages.},
  pages    = {12},
  author   = {Wilcox, James R and Woos, Doug and Panchekha, Pavel and Tatlock, Zachary and Wang, Xi and Ernst, Michael D and Anderson, Thomas},
  langid   = {english},
  file     = {Wilcox et al. - Verdi A Framework for Implementing and Formally V.pdf:C\:\\Users\\johan.moritz\\Zotero\\storage\\FW35G29K\\Wilcox et al. - Verdi A Framework for Implementing and Formally V.pdf:application/pdf}
}

@inproceedings{garro_formal_2016,
  title      = {On formal cyber physical system properties modeling: A new temporal logic language and a Modelica-based solution},
  doi        = {10.1109/SysEng.2016.7753137},
  shorttitle = {On formal cyber physical system properties modeling},
  abstract   = {Modeling and Simulation methods, tools and techniques aim at supporting the different phases of the lifecycle of modern systems, going from requirements analysis to system design and operation. However, their effective application requires investigating several aspects such as the formal modeling of system requirements and the binding and automated composition between heterogeneous models (e.g. requirements models, architectural models, behavioral models). In this context, the paper presents a new formal requirement modeling language based on temporal logic, called {FORM}-L, and a software library, based on the Modelica language, that implements the constructs provided by {FORM}-L so as to enable the visual modeling of system properties as well as their verification through simulation. The effectiveness of the proposal is shown on a real case study concerning an Intermediate Cooling System.},
  eventtitle = {2016 {IEEE} International Symposium on Systems Engineering ({ISSE})},
  pages      = {1--8},
  booktitle  = {2016 {IEEE} International Symposium on Systems Engineering ({ISSE})},
  author     = {Garro, Alfredo and Tundis, Andrea and Bouskela, Daniel and Jardin, Audrey and Thuy, Nguyen and Otter, Martin and Buffoni, Lena and Fritzson, Peter and Sjölund, Martin and Schamai, Wladimir and Olsson, Hans},
  date       = {2016-10},
  keywords   = {Analytical models, Atmospheric modeling, Context modeling, Formal Languages, Model-Based Systems Engineering, Modelica, Modeling and Simulation, Object oriented modeling, Properties Modeling, Requirements Engineering, System analysis and design, System Verification, Unified modeling language},
  file       = {IEEE Xplore Full Text PDF:C\:\\Users\\johan.moritz\\Zotero\\storage\\VVBTHTD5\\Garro et al. - 2016 - On formal cyber physical system properties modelin.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\johan.moritz\\Zotero\\storage\\VKY2R2FS\\7753137.html:text/html}
}

@article{lamport_specifying_nodate,
  title  = {Specifying Concurrent Systems with {TLA}+},
  pages  = {372},
  author = {Lamport, Leslie},
  langid = {english},
  file   = {Lamport - Specifying Concurrent Systems with TLA+.pdf:C\:\\Users\\johan.moritz\\Zotero\\storage\\C3SXJMYB\\Lamport - Specifying Concurrent Systems with TLA+.pdf:application/pdf}
}

@article{linderud_reproducible_nodate,
  title    = {Reproducible Builds: Break a log, good things come in trees},
  abstract = {This thesis investigates how transparency log overlays can provide additional security guarantees for rebuilders building Debian packages. In Reproducible Builds it is important to have a set of independent and distributed systems building packages to make sure they have not been tampered with. By putting {BUILDINFO} ﬁles and in-toto link metadata on a proof-of-concept rebuilder transparency log we are capable of detecting tampering of the published logs despite the current scaling problems. This gives users and companies additional security guarantees in the software supply chain for Debian packages.},
  pages    = {120},
  author   = {Linderud, Morten and Opdahl, Andreas Lothe},
  langid   = {english},
  file     = {Linderud and Opdahl - Reproducible Builds Break a log, good things come.pdf:C\:\\Users\\johan.moritz\\Zotero\\storage\\B3JQYCZA\\Linderud and Opdahl - Reproducible Builds Break a log, good things come.pdf:application/pdf}
}


@article{thompson_reflections_1984,
  title  = {Reflections on trusting trust},
  volume = {27},
  pages  = {3},
  number = {8},
  author = {Thompson, Ken},
  date   = {1984},
  langid = {english},
  file   = {Thompson - 1984 - Reflections on trusting trust.pdf:C\:\\Users\\johan.moritz\\Zotero\\storage\\RAKH42KD\\Thompson - 1984 - Reflections on trusting trust.pdf:application/pdf}
}


@article{lamb_reproducible_2021,
  title        = {Reproducible Builds: Increasing the Integrity of Software Supply Chains},
  issn         = {1937-4194},
  doi          = {10.1109/MS.2021.3073045},
  shorttitle   = {Reproducible Builds},
  abstract     = {Although it is possible to increase conﬁdence in Free and Open Source Software ({FOSS}) by reviewing its source code, trusting code is not the same as trusting its executable counterparts. These are typically built and distributed by third-party vendors, with severe security consequences if their supply chains are compromised. In this paper, we present reproducible builds, an approach that can determine whether generated binaries correspond with their original source code. We ﬁrst deﬁne the problem, and then provide insight into the challenges of making real-world software build in a “reproducible” manner—this is, when every build generates bit-for-bit identical results. Through the experience of the Reproducible Builds project making the Debian Linux distribution reproducible, we also describe the afﬁnity between reproducibility and quality assurance ({QA}).},
  pages        = {0--0},
  journaltitle = {{IEEE} Software},
  author       = {Lamb, Chris and Zacchiroli, Stefano},
  date         = {2021},
  note         = {Conference Name: {IEEE} Software},
  keywords     = {Buildings, Linux, Metadata, Reproducibility of results, Software, Supply chains, Tools},
  file         = {IEEE Xplore Full Text PDF:C\:\\Users\\johan.moritz\\Zotero\\storage\\UTAVBYM3\\Lamb and Zacchiroli - 2021 - Reproducible Builds Increasing the Integrity of S.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\johan.moritz\\Zotero\\storage\\43FD77P6\\9403390.html:text/html}
}

@online{noauthor_reproducible_nodate,
  title   = {Reproducible Builds — a set of software development practices that create an independently-verifiable path from source to binary code},
  url     = {https://reproducible-builds.org/},
  urldate = {2022-02-07},
  file    = {Reproducible Builds — a set of software development practices that create an independently-verifiable path from source to binary code:C\:\\Users\\johan.moritz\\Zotero\\storage\\EZ9WSCZT\\reproducible-builds.org.html:text/html}
}

@online{rebuilderd_public_nodate,
  title    = {Public rebuilderd instances},
  url      = {https://rebuilderd.com/},
  abstract = {rebuilderd is a build system that attempts to reproduce build artifacts. It compiles the source code in a similar build environment and compares it to the official pre-built artifacts. This helps identify supply-chain compromises. This website hosts a list of public instances publishing their results.},
  urldate  = {2022-02-07},
  langid   = {english},
  file     = {Snapshot:C\:\\Users\\johan.moritz\\Zotero\\storage\\V2AAF9IW\\rebuilderd.com.html:text/html}
}